/* 
 * pdal_defines.h.in is used by cmake to generate pdal_defines.h
 *
 * Do not edit pdal_defines.h!
 *
 * Note this is a C-style header.  Do not use C++ syntax.
 */
#ifndef LIBPC_DEFINES_H
#define LIBPC_DEFINES_H

/*
 * version settings
 */
#define LIBPC_VERSION_MAJOR @LIBPC_VERSION_MAJOR@
#define LIBPC_VERSION_MINOR @LIBPC_VERSION_MINOR@
#define LIBPC_VERSION_PATCH @LIBPC_VERSION_PATCH@

#define LIBPC_VERSION_STRING "@LIBPC_VERSION_STRING@"

/* (note this will look yucky until we get to major>=1) */
#define LIBPC_VERSION_INTEGER ((LIBPC_VERSION_MAJOR*100*100)+(LIBPC_VERSION_MINOR*100)+LIBPC_VERSION_PATCH)


/*
 * availability of 3rd-party libraries
 */
#cmakedefine LIBPC_HAVE_LIBLAS
#cmakedefine LIBPC_HAVE_LASZIP
#cmakedefine LIBPC_HAVE_ORACLE
#cmakedefine LIBPC_HAVE_GDAL
#cmakedefine LIBPC_HAVE_LIBXML2
#cmakedefine LIBPC_HAVE_LIBGEOTIFF
#cmakedefine LIBPC_HAVE_MRSID


/*
 * platform endianness
 */
#cmakedefine LIBPC_ENDIAN_AWARE

/*
 * Debug or Release build?
 */
#define LIBPC_BUILD_TYPE "@LIBPC_BUILD_TYPE@"

/*
 * platform OS
 */
#cmakedefine LIBPC_PLATFORM_WIN32

/*
 * platform compiler 
 */
#cmakedefine LIBPC_COMPILER_MSVC
#cmakedefine LIBPC_COMPILER_VC10
#cmakedefine LIBPC_COMPILER_VC9
#cmakedefine LIBPC_COMPILER_VC8
#cmakedefine LIBPC_COMPILER_GCC
#cmakedefine LIBPC_COMPILER_CLANG


/*
 * We have two modes: with GDAL and geotiff, SRS is enabled -- otherwise, it's disabled
 * we use one macro to simplify the control
 */
#if defined(LIBPC_HAVE_GDAL) && defined(LIBPC_HAVE_LIBGEOTIFF)
#define LIBPC_SRS_ENABLED
#endif

#endif
