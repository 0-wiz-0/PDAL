.. _building:

========
Building
========

This Note contains some notes on project dependencies, configurations,
building, etc.


Endianness
==========

PDAL will not be supporting big-endian (BE) platforms at this time.  We
recognize it would be good to do so, since endianness ports always seem to
shake out twiddly little bugs, but we don't have ready access a BE
development box.

Where you are writing endian-sensitive code, you should comment it loudly
so future maintainers will know where to go to add BE support.


Project Dependencies - 3rd Party Libs
=====================================

PDAL will use these libraries:


* Boost - for C++ library needs, such as streams or parsers (required)

* libxml2 - Schema description, validation, and serialization (required)

* GDAL - for spatial reference support (and rasterization) (optional)

* libLAS - for LAS (compressed if available to libLAS) support. (optional)

* MrSID - for LizardTech's MG4 lidar format (optional)

* Oracle - OCI (optional)

* libspatialindex - Rtree support, maybe quadtree if someone implements it for libspatialindex (optional)

* *others?*

Some of these libraries may be required (such as Boost).


Project Dependencies - Builds/Infrastructure
============================================

To develop and build PDAL, we'll be using these tools:

* Sphinx and rst2pdf - for docs

* CMake - for generating makefiles

* Python - for miscellaneous scripting needs

* *others?*


Buildbot
========

A buildbot will eventually be set up to prevent builds from breaking and to
keep the unit tests passing.


Platforms
=========

We will support these platforms initially, corresponding to what the
developers are using regularly:

* Windows - VS2010 (32- and 64-bit) - 2008 32-bit

* Linux - gcc 4.x+

* Mac - gcc 4.0.1+

By virtue of CMake, other platforms may be supported such as VS 2008 or 
Solaris, but we aren't targeting those specifically.


